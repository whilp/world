load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_layer", "container_push")
load("@io_bazel_rules_docker//docker/util:run.bzl", "container_run_and_commit")
load("@io_bazel_rules_docker//contrib:test.bzl", "container_test")
load("//cmd:labels.bzl", "labels")

container_push(
    name = "push",
    format = "Docker",
    image = ":image",
    registry = "ghcr.io",
    repository = "whilp/world",
    tag = "latest",
)

container_image(
    name = "image",
    base = "base",
    env = {
        "XDG_RUNTIME_DIR": "/home/user/.xdg",
        "DEBIAN_FRONTEND": "noninteractive",
    },
    labels = labels({"org.opencontainers.image.description": "development environment"}),
    layers = [
        ":bins",
        ":docker",
        ":etc",
        ":sudoersd",
        ":home",
        "//lang/go:layer",
        "//lang/node:layer",
    ],
    symlinks = {
        "/usr/bin/python": "/usr/bin/python3.7",
        "/usr/bin/python3": "/usr/bin/python3.7",
    },
    user = "user",
)

PACKAGES = [
    "apt-utils",
    "binutils",
    "ca-certificates",
    "cpp",
    "curl",
    "dialog",
    "file",
    "g++",
    "gcc",
    "git",
    "gpg",
    "gpgconf",
    "iproute2",
    "iptables",
    "libicu60",
    "libkrb5-3",
    "make",
    "nvi",
    "openssh-client",
    "openssl",
    "patch",
    "python3.7-distutil",
    "python3.7-venv",
    "python3.7",
    "sudo",
    "tzdata",
    "uidmap",
    "unzip",
    "wget",
    "zlib1g",
]

REMOVE_PACKAGES = [
    "python3",
    "python3-minimal",
]

container_run_and_commit(
    name = "base",
    commands = [
        "export DEBIAN_FRONTEND=noninteractive",
        "apt-get update",
        "apt-get remove -y " + " ".join(REMOVE_PACKAGES),
        "apt-get install --no-install-recommends -y " + " ".join(PACKAGES),
        "apt-get autoremove -y",
        "apt-get clean -y",
        "rm -rf /var/lib/apt/lists/*",
    ],
    image = "@ubuntu18.04//image",
)

container_layer(
    name = "sudoersd",
    directory = "/etc/sudoers.d",
    files = ["sudoers"],
)

container_layer(
    name = "etc",
    directory = "/etc",
    files = [
        "group",
        "passwd",
        "subgid",
        "subuid",
    ],
)

container_layer(
    name = "home",
    directory = "/home/user",
    tars = [
        "//home",
    ],
)

container_layer(
    name = "docker",
    directory = "/usr/local",
    symlinks = {
        "/usr/local/bin/containerd-shim": "/usr/local/docker/containerd-shim",
        "/usr/local/bin/containerd": "/usr/local/docker/containerd",
        "/usr/local/bin/ctr": "/usr/local/docker/ctr",
        "/usr/local/bin/docker-init": "/usr/local/docker/docker-init",
        "/usr/local/bin/docker-proxy": "/usr/local/docker/docker-proxy",
        "/usr/local/bin/docker": "/usr/local/docker/docker",
        "/usr/local/bin/dockerd-rootless.sh": "/usr/local/docker-rootless-extras/dockerd-rootless.sh",
        "/usr/local/bin/dockerd": "/usr/local/docker/dockerd",
        "/usr/local/bin/rootlesskit-docker-proxy": "/usr/local/docker-rootless-extras/rootlesskit-docker-proxy",
        "/usr/local/bin/rootlesskit": "/usr/local/docker-rootless-extras/rootlesskit",
        "/usr/local/bin/runc": "/usr/local/docker/runc",
        "/usr/local/bin/vpnkit": "/usr/local/docker-rootless-extras/vpnkit",
    },
    tars = [
        "@docker//file",
        "@docker_rootless//file",
    ],
)

container_layer(
    name = "bins",
    directory = "/usr/local/bin",
    files = [
        ":post.sh",
        "@age",
        "@age//:age-keygen",
        "@bazel//file",
        "@buildifier//file",
        "@buildozer//file",
        "@com_github_ramya_rao_a_go_outline//:go-outline",
        "@com_github_rogpeppe_godef//:godef",
        "@com_github_stamblerre_gocode//:gocode",
        "@com_github_uudashr_gopkgs_v2//cmd/gopkgs",
        "@deno",
        "@golangcilint//:golangci-lint",
        "@ibazel//file",
        "@net_starlark_go//cmd/starlark",
        "@org_golang_x_lint//golint",
        "@org_golang_x_tools//cmd/goimports",
        "@org_golang_x_tools//cmd/guru",
        "@shellcheck",
        "@shfmt//file",
        "@smallstep//:step",
    ],
    mode = "0o777",
    symlinks = {
        "./usr/local/bin/gostarlark": "starlark",
        "./usr/local/bin/gocode-gomod": "gocode",
    },
)

container_test(
    name = "test",
    configs = ["test.json"],
    image = ":image",
)
