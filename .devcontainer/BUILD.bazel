load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push", "container_layer")
load("@io_bazel_rules_docker//docker/util:run.bzl", "container_run_and_commit")
load("@io_bazel_rules_docker//contrib:test.bzl", "container_test")
load("@io_bazel_rules_docker//contrib:passwd.bzl", "passwd_entry", "passwd_file")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

container_image(
    name = "devcontainer",
    base = "base",
    user = "user",
    workdir = "/home/user",
    entrypoint = ["/usr/local/bin/entrypoint.sh"],
    layers = [
      ":bins",
      ":docker",
      ":etc",
      ":sudoersd",
    ]
)

PACKAGES = [
  "sudo"
]

container_run_and_commit(
  name = "base",
  image = "@ubuntu18.04//image",
  commands = [
    "apt-get update",
     "apt-get install --no-install-recommends -y " + " ".join(PACKAGES)
      ]
)

container_layer(
  name = "sudoersd",
  directory = "/etc/sudoers.d",
  files = ["sudoers"],
)

container_layer(
  name = "etc",
  directory = "/etc",
  files = [
    "passwd",
    "group"
  ]
)

container_layer(
  name = "docker",
  directory = "/usr/local",
  tars = [
    "@docker//file",
    "@docker_rootless//file"
  ],
  symlinks = {
    "/usr/local/bin/containerd-shim": "/usr/local/docker/containerd-shim",
    "/usr/local/bin/containerd": "/usr/local/docker/containerd",
    "/usr/local/bin/ctr": "/usr/local/docker/ctr",
    "/usr/local/bin/docker-init": "/usr/local/docker/docker-init",
    "/usr/local/bin/docker-proxy": "/usr/local/docker/docker-proxy",
    "/usr/local/bin/docker": "/usr/local/docker/docker",
    "/usr/local/bin/dockerd-rootless.sh": "/usr/local/docker-rootless-extras/dockerd-rootless.sh",
    "/usr/local/bin/dockerd": "/usr/local/docker/dockerd",
    "/usr/local/bin/rootlesskit-docker-proxy": "/usr/local/docker-rootless-extras/rootlesskit-docker-proxy",
    "/usr/local/bin/rootlesskit": "/usr/local/docker-rootless-extras/rootlesskit",
    "/usr/local/bin/runc": "/usr/local/docker/runc",
    "/usr/local/bin/vpnkit": "/usr/local/docker-rootless-extras/vpnkit",
  }
)

container_layer(
  name = "bins",
  mode = "0o777",
  directory = "/usr/local/bin",
  files = [
    "@bazel//file",
    "@buildozer//file",
    "@buildifier//file",
    "@ibazel//file",
    ":entrypoint.sh"
  ]
)

container_test(
    name = "test",
    configs = ["test.json"],
    image = ":image",
)
