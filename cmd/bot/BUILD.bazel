load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("@io_bazel_rules_docker//contrib:test.bzl", "container_test")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@npm//@bazel/typescript:index.bzl", "ts_library")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("//cmd:labels.bzl", "labels")

DATA = [":lib"]

ENTRY_POINT = "index.ts"

nodejs_binary(
    name = "bot",
    data = DATA,
    entry_point = ENTRY_POINT,
)

nodejs_image(
    name = "image",
    base = ":base",
    data = DATA,
    entry_point = ENTRY_POINT,
)

container_image(
    name = "base",
    base = "@nodejs_image_base//image",
    env = {
        "BOT_ID": "",
        "BOT_KEY": "",
    },
    labels = labels({"org.opencontainers.image.description": "GitHub bot"}),
)

ts_library(
    name = "lib",
    srcs = ["index.ts"],
    deps = [
        "@npm//@octokit/auth-app",
        "@npm//@octokit/rest",
        "@npm//@types/node",
    ],
)

container_push(
    name = "push",
    format = "Docker",
    image = ":image",
    registry = "ghcr.io",
    repository = "whilp/bot",
    tag = "latest",
)

container_test(
    name = "test",
    configs = ["test.json"],
    image = ":image",
)
